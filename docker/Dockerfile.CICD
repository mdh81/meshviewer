FROM ubuntu:23.10

# Avoid warnings by switching to noninteractive
ENV DEBIAN_FRONTEND=noninteractive

# Install all dependencies
RUN apt-get update && apt-get install -y \
    # Development tools
    build-essential \
    cmake \
    git \
    # OpenGL libraries
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    freeglut3-dev \
    # GLEW and GLFW
    libglew-dev \
    libglfw3 \
    libglfw3-dev \
    # Install python. There are a bunch of workflows during build and CICD that rely on running python scripts
    python3 \
    python3-pip \
    python3-venv \
    # Install vim
    vim \
    wget \
    p7zip-full \
    # Cleanup
    && rm -rf /var/lib/apt/lists/*

# Create a virtual environment and install gitpython
# Ensure that python interpreter from the virtual environment will be the one that is used
# by python execution workflows in the container by prepending it to PATH
RUN python3 -m venv /.venv
RUN /.venv/bin/pip install --upgrade pip setuptools wheel
RUN /.venv/bin/pip install gitpython

# Install GLM
RUN cd /usr/local/include && \
    wget https://github.com/g-truc/glm/releases/download/1.0.0/glm-1.0.0-light.7z && \
    7z x glm-1.0.0-light.7z && \
    cd /

# Install Emscripten
RUN git clone https://github.com/emscripten-core/emsdk.git && \
    cd emsdk && \
    ./emsdk install latest && \
    ./emsdk activate latest

# Set the environment variables for Emscripten
ENV EMSDK /emsdk
ENV EM_CONFIG /emsdk/.emscripten
ENV PATH="/emsdk:/emsdk/upstream/emscripten:${PATH}"

# Ensure python from the virtual environment with extra packages installed in previous steps is used for all python
# invocations
ENV PATH="/.venv/bin:${PATH}"

# Switch back to dialog for any ad-hoc use of apt-get
ENV DEBIAN_FRONTEND=dialog

# Set the working directory
WORKDIR /

# Entry point
ENTRYPOINT ["/bin/bash", "-c", "tail -f /dev/null"]]
