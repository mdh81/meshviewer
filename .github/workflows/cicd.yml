name: Build and Quality Check

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout MeshViewer
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Create Docker Image
        run: docker build --platform linux/amd64 -t mvlinux -f ${{github.workspace}}/docker/Dockerfile.CICD .

      - name: Create Docker Container
        run: docker run -w /meshviewer -d --name cicd -v ${{github.workspace}}:/meshviewer mvlinux

      - name: Configure Build
        run: docker exec cicd cmake -B build -DCMAKE_BUILD_TYPE=Release 

      - name: Build
        run: docker exec cicd cmake --build build --config Release --parallel 

      - name: Test
        run: docker exec cicd ctest --test-dir build --rerun-failed --output-on-failure

      - name: Configure Emscripten Build
        run: docker exec cicd emcmake cmake -B build_web -DCMAKE_BUILD_TYPE=Release -DEMSCRIPTEN=ON

      - name: Build Web Assembly
        run: docker exec cicd cmake --build build_web --config Release --parallel

      - name: Assemble Web Viewer Artifacts
        run: docker exec cicd python3 web/py/artifacts.py assemble
        if: github.event_name != 'pull_request'

      - name: Publish Web Viewer Artifacts
        env:
          GITHUB_TOKEN: ${{secrets.WEB_VIEWER_DEPLOYMENT_GH_TOKEN}}
        run: docker exec -e GITHUB_TOKEN cicd python3 web/py/artifacts.py deploy ${GITHUB_SHA}
        if: github.event_name != 'pull_request'
